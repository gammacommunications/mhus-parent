



lifecycles:
- name: deploy
  steps:
  
  # #####################
  # GIT Stuff
  # #####################
  - title: Git Status
    target: con.git
    arguments:
    - 'status'
    sort: order 
    properties:
      ignoreReturnCode: true

  - title: Confirm Git Status
    target: confirm
    properties:
       prompt: Confirm
       message: |
         Check if GIT must be commited before, if not
         press y to process deployment.

  - title: Git Reset
    target: con.git
    arguments:
    - "reset --hard"
    - "pull"

  # #####################
  # New Version
  # #####################
  - title: Calculate new versions
    target: con.calculateNewVersion

  - title: Set new version properties
    target: con.updatePomProperties
    selector:
      version.changed: true

  - title: Confirm New Versions
    target: confirm
    properties:
       prompt: Confirm
       message: Check if new Versions are set correctly

  # #####################
  # Prepare code
  # #####################
  
  - title: Beautify source code
    target: con.maven
    arguments:
    - "git-code-format:format-code '-DglobPattern=**/*'"
    selector:
      version.changed: true
  
  - title: set license information
    target: con.maven
    arguments:
    - license:format
    selector:
      version.changed: true
    
#  - title: compile templated files
#    target: con.maven
#    arguments:
#    - de.mhus.mvn.plugin:tmpl-maven-plugin:1.1.0:tmpl
#    selector:
#      version.changed: true

  # #####################
  # Create documentation
  # #####################
  
#  - title: compile templated files
#    target: con.maven
#    arguments:
#    - de.mhus.mvn.plugin:manual-collector-maven-plugin:1.1.0:collect
#    selector:
#      version.changed: true

  # #####################
  # Update and build parent
  # #####################
  - title: Set new project version
    target: con.maven
    arguments:
    - versions:set
    - "-DnewVersion=${project.version}"
    selector:
      version.changed: true
      group: prepare

  - title: Install parent pom
    target: con.maven
    arguments:
    - clean
    - install
    - "-P release"
    selector:
      version.changed: true
      group: prepare

  - title: Validate No Snapshots
    target: con.maven
    arguments:
    - 'de.mhus.mvn.plugin:versioning-maven-plugin:1.0.0:validate-no-snapshots'
    - "-P release"
    sort: order
    selector:
      version.changed: true
      group: parent

  # #####################
  # deploy all other projects
  # #####################

  - title: Set new parent version
    target: con.updatePomParentVersion
    selector:
      version.changed: true
      group: bundle
    properties:
      version: ${projects.magic-parent.version}

  - title: Set new project version
    target: con.maven
    arguments:
    - versions:set
    - "-DnewVersion=${project.version}"
    selector:
      version.changed: true
      group: bundle

  - title: Compile Projects
    target: con.maven
    arguments:
    - clean
    - install
    - "-P release"
    sort: order
    selector:
      group: bundle
      version.changed: true

  - title: Validate No Snapshots
    target: con.maven
    arguments:
    - 'de.mhus.mvn.plugin:versioning-maven-plugin:1.0.0:validate-no-snapshots'
    - "-P release"
    sort: order
    selector:
      version.changed: true
      group: bundle

  - title: Deploy Projects
    target: con.maven
    arguments:
    - deploy
    - '-P release'
    sort: order
    selector:
      group: bundle
      version.changed: true


  # #####################
  # finally Deploy Parent
  # #####################
  
  - title: Deploy Parent
    target: con.maven
    arguments:
    - deploy
    - '-P release'
    selector:
      group: parent

  - title: Save version history
    target: con.persistNewVersions

  - title: Git Commit
    target: con.git
    arguments:
    - 'add -A'
    - 'commit -m "${project.version}"'
    selector:
      version.changed: true
    properties:
      ignoreReturnCode: true

  - title: Git New Tag
    target: con.git
    arguments:
    - 'tag "${project.version}"'
    - 'push origin --tags'
    selector:
      version.changed: true
    properties:
      ignoreReturnCode: true

  - title: Git Push
    target: con.git
    arguments:
    - 'push'
    selector:
      version.changed: true
    properties:
      ignoreReturnCode: true

  # #####################
  # Snapshot Version
  # #####################

  - title: Set project snapshot version
    target: nextSnapshotVersions

  - title: Set snapshot version properties
    target: con.updatePomProperties
    selector:
      version.changed: true

  - title: Set snapshot project version
    target: con.maven
    arguments:
    - versions:set
    - "-DnewVersion=${project.version}"
    sort: order
    selector:
      group: parent
      version.changed: true

  - title: Set snapshot parent version
    target: con.updatePomParentVersion
    selector:
      group: bundle
    sort: order
    properties:
      version: ${projects.mhus-parent.version}
      version.changed: true

  - title: Set snapshot project version
    target: con.maven
    arguments:
    - versions:set
    - "-DnewVersion=${project.version}"
    sort: order
    selector:
      group: bundle
      version.changed: true

  # #####################
  # Compile all projects
  # #####################
  - title: Compile All
    target: con.maven
    arguments:
    - clean
    - install
    sort: order
    selector:
      version.changed: true

#  - title: compile templated files - snapshot
#    target: con.maven
#    arguments:
#    - de.mhus.mvn.plugin:tmpl-maven-plugin:1.1.0:tmpl
#    selector:
#      version.changed: true

  # #####################
  # Commit Snapshot
  # #####################
  - title: Git Commit And Push
    target: con.git
    arguments:
    - 'add -A'
    - 'commit -m "42-SNAPSHOT"'
    - push
    selector:
      version.changed: true
    properties:
      ignoreReturnCode: true

